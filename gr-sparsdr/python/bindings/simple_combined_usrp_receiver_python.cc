/*
 * Copyright 2023 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(simple_combined_usrp_receiver.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(b6210ccb32fb352b7762199728f38b27)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/sparsdr/simple_combined_usrp_receiver.h>
// pydoc.h is automatically generated in the build directory
#include <simple_combined_usrp_receiver_pydoc.h>

void bind_simple_combined_usrp_receiver(py::module& m)
{

    using simple_combined_usrp_receiver    = ::gr::sparsdr::simple_combined_usrp_receiver;


    py::class_<simple_combined_usrp_receiver, gr::hier_block2,
        std::shared_ptr<simple_combined_usrp_receiver>>(m, "simple_combined_usrp_receiver", D(simple_combined_usrp_receiver))

        .def(py::init(&simple_combined_usrp_receiver::make),
           py::arg("device_addr"),
           py::arg("format_version"),
           py::arg("center_frequency"),
           py::arg("bands"),
           py::arg("threshold"),
           py::arg("reconstruct_path") = "sparsdr_reconstruct",
           py::arg("zero_gaps") = false,
           py::arg("skip_bin_config") = false,
           D(simple_combined_usrp_receiver,make)
        )
        




        
        .def("set_gain",&simple_combined_usrp_receiver::set_gain,       
            py::arg("gain"),
            D(simple_combined_usrp_receiver,set_gain)
        )


        
        .def("set_antenna",&simple_combined_usrp_receiver::set_antenna,       
            py::arg("antenna"),
            D(simple_combined_usrp_receiver,set_antenna)
        )


        
        .def("set_shift_amount",&simple_combined_usrp_receiver::set_shift_amount,       
            py::arg("scaling"),
            D(simple_combined_usrp_receiver,set_shift_amount)
        )

        ;




}








