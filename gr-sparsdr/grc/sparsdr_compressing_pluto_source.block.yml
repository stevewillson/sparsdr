# auto-generated by grc.converter

id: sparsdr_compressing_pluto_source
label: Compressing Pluto Source
category: '[SparSDR]'
flags:
- throttle

parameters:
-   id: uri
    label: IIO context URI
    dtype: string
    default: ip:192.168.2.1

    # Choose if bin_spec or threshold_file is used
-   id: threshold_source
    label: Threshold source
    dtype: enum
    default: 'Bin specification'
    options: ['Bin specification', 'Threshold file']
    hide: part

-   id: bin_spec
    label: Bin specification
    dtype: string
    default: 0..8:1
    hide: ${ 'none' if (threshold_source == 'Bin specification') else 'all' }
-   id: threshold_file
    label: Threshold file
    dtype: file_open
    hide: ${ 'none' if (threshold_source == 'Threshold file') else 'all' }

-   id: average_interval
    label: Average sample interval
    dtype: int
    default: 2 ** 20
-   id: frequency
    label: Center frequency
    dtype: int
    default: '2412000000'
-   id: gain
    label: Gain
    dtype: float
    default: '60'
    hide: ${ 'none' if (gain_control_mode == 'manual') else 'all' }
-   id: gain_control_mode
    label: Gain control mode
    dtype: string
    default: manual
    options: [manual, fast_attack, slow_attack, hybrid]
    option_labels: [manual, fast_attack, slow_attack, hybrid]
-   id: buffer_size
    label: Buffer size (samples)
    dtype: int
    default: 1024 * 1024
-   id: shift_amount
    label: Shift amount
    dtype: int
    default: '6'
-   id: fft_size
    label: FFT size
    dtype: int
    default: '1024'
-   id: skip_config
    label: Skip bin configuration
    hide: part
    dtype: bool
    default: 'False'
    options: ['False', 'True']
    option_labels: ['False', 'True']

outputs:
-   domain: stream
    dtype: sc16
asserts:
- ${ fft_size >= 8 and fft_size <= 1024 and (fft_size & (fft_size - 1)) == 0 }
- ${ average_interval >= 8 and average_interval <= (2 ** 31) and (average_interval
    & (average_interval - 1)) == 0 }

templates:
    imports: 
        from gnuradio import sparsdr
    make: |-
        sparsdr.compressing_pluto_source(${uri}, ${buffer_size})
        self.${id}.set_frequency(${frequency})
        self.${id}.set_gain_control_mode(${gain_control_mode})
        % if eval(gain_control_mode) == "manual":
        self.${id}.set_gain(${gain})
        % endif
        self.${id}.stop_all()
        self.${id}.set_shift_amount(${shift_amount})
        % if not(eval(skip_config)):
        self.${id}.set_fft_size(${fft_size})
        self.${id}.load_rounded_hann_window(${fft_size})
        % if threshold_source == "Bin specification":
        self.${id}.set_bin_spec(${bin_spec})
        % else:
        self.${id}.set_thresholds_from_file(${threshold_file})
        % endif
        % else:
        print('Skipping bin configuration')
        % endif
        self.${id}.set_average_interval(${average_interval})
        self.${id}.start_all()

file_format: 1
