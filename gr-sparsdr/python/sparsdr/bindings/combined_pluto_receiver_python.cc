/*
 * Copyright 2023 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(combined_pluto_receiver.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(6cfe442efc90c0177ec74ee509e7fefa)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/sparsdr/combined_pluto_receiver.h>
// pydoc.h is automatically generated in the build directory
#include <combined_pluto_receiver_pydoc.h>

void bind_combined_pluto_receiver(py::module& m)
{
    using combined_pluto_receiver    = ::gr::sparsdr::combined_pluto_receiver;

    py::class_<combined_pluto_receiver, 
        gr::hier_block2,
        // gr::block,
        // gr::basic_block,
        std::shared_ptr<combined_pluto_receiver>>(
            m, "combined_pluto_receiver", D(combined_pluto_receiver))

        .def(py::init(&combined_pluto_receiver::make),
           py::arg("uri"),
           py::arg("buffer_size"),
           py::arg("fft_size"),
           py::arg("center_frequency"),
           py::arg("bands"),
           py::arg("reconstruct_path") = "sparsdr_reconstruct",
           py::arg("zero_gaps") = false,
           D(combined_pluto_receiver,make)
        )
        
        .def("set_frequency",&combined_pluto_receiver::set_frequency,       
            py::arg("frequency"),
            D(combined_pluto_receiver,set_frequency)
        )
        
        .def("set_gain",&combined_pluto_receiver::set_gain,       
            py::arg("gain"),
            D(combined_pluto_receiver,set_gain)
        )
        
        .def("set_gain_control_mode",&combined_pluto_receiver::set_gain_control_mode,       
            py::arg("mode"),
            D(combined_pluto_receiver,set_gain_control_mode)
        )
        ;

        py::module m_sparsdr = m.def_submodule("sparsdr");
}