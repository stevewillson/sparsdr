/*
 * Copyright 2023 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(combined_usrp_receiver.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(24899d8db3f583981a8deab3fc18ad4d)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/sparsdr/combined_usrp_receiver.h>
// pydoc.h is automatically generated in the build directory
#include <combined_usrp_receiver_pydoc.h>

void bind_combined_usrp_receiver(py::module& m)
{

    using combined_usrp_receiver    = ::gr::sparsdr::combined_usrp_receiver;


    py::class_<combined_usrp_receiver, gr::hier_block2,
        std::shared_ptr<combined_usrp_receiver>>(m, "combined_usrp_receiver", D(combined_usrp_receiver))

        .def(py::init(&combined_usrp_receiver::make),
           py::arg("device_addr"),
           py::arg("format_version"),
           py::arg("center_frequency"),
           py::arg("bands"),
           py::arg("reconstruct_path") = "sparsdr_reconstruct",
           py::arg("zero_gaps") = false,
           D(combined_usrp_receiver,make)
        )
        




        
        .def("set_gain",&combined_usrp_receiver::set_gain,       
            py::arg("gain"),
            D(combined_usrp_receiver,set_gain)
        )


        
        .def("set_center_freq",&combined_usrp_receiver::set_center_freq,       
            py::arg("tune_request"),
            D(combined_usrp_receiver,set_center_freq)
        )


        
        .def("set_antenna",&combined_usrp_receiver::set_antenna,       
            py::arg("ant"),
            D(combined_usrp_receiver,set_antenna)
        )

        ;



        py::module m_sparsdr = m.def_submodule("sparsdr");







}








