/*
 * Copyright 2023 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(reconstruct.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(7ca3b538d0895d364d17009d202b55c5)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/sparsdr/reconstruct.h>
// pydoc.h is automatically generated in the build directory
#include <reconstruct_pydoc.h>

void bind_reconstruct(py::module& m)
{
    using reconstruct = ::gr::sparsdr::reconstruct;

    py::class_<reconstruct, gr::hier_block2,
        std::shared_ptr<reconstruct>> reconstruct_class(m, "reconstruct", D(reconstruct));

    reconstruct_class.def(py::init(&reconstruct::make),
           py::arg("bands"),
           py::arg("reconstruct_path") = "sparsdr_reconstruct",
           py::arg("sample_format") = "N210 v1",
           py::arg("zero_gaps") = false,
           py::arg("compression_fft_size") = 1024,
           D(reconstruct, make)
        )
        ;
}








