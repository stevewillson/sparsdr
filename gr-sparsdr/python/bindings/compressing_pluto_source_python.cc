/*
 * Copyright 2023 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(compressing_pluto_source.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(e5e78bfa6ae28508a5aeb683d83e9e3e)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/sparsdr/compressing_pluto_source.h>
// pydoc.h is automatically generated in the build directory
#include <compressing_pluto_source_pydoc.h>

void bind_compressing_pluto_source(py::module& m)
{

    using compressing_pluto_source    = ::gr::sparsdr::compressing_pluto_source;


    py::class_<compressing_pluto_source, gr::hier_block2,
        std::shared_ptr<compressing_pluto_source>>(m, "compressing_pluto_source", D(compressing_pluto_source))

        .def(py::init(&compressing_pluto_source::make),
           py::arg("uri"),
           py::arg("buffer_size") = 1024 * 1024,
           D(compressing_pluto_source,make)
        )
        




        
        .def("format_version",&compressing_pluto_source::format_version,       
            D(compressing_pluto_source,format_version)
        )


        
        .def("set_frequency",&compressing_pluto_source::set_frequency,       
            py::arg("frequency"),
            D(compressing_pluto_source,set_frequency)
        )


        
        .def("set_gain",&compressing_pluto_source::set_gain,       
            py::arg("gain"),
            D(compressing_pluto_source,set_gain)
        )


        
        .def("set_gain_control_mode",&compressing_pluto_source::set_gain_control_mode,       
            py::arg("mode"),
            D(compressing_pluto_source,set_gain_control_mode)
        )

        ;



        py::module m_sparsdr = m.def_submodule("sparsdr");







}








