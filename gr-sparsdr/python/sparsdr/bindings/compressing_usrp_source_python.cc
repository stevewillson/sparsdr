/*
 * Copyright 2023 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(compressing_usrp_source.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(94fc041c972f4da30ef1e11d5c462d6d)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/sparsdr/compressing_usrp_source.h>
// pydoc.h is automatically generated in the build directory
#include <compressing_usrp_source_pydoc.h>

void bind_compressing_usrp_source(py::module& m)
{

    using compressing_usrp_source    = ::gr::sparsdr::compressing_usrp_source;

    py::class_<compressing_usrp_source, 
        gr::hier_block2,
        std::shared_ptr<compressing_usrp_source>>(m, "compressing_usrp_source", D(compressing_usrp_source))

        .def(py::init(&compressing_usrp_source::make),
           py::arg("device_addr"),
           D(compressing_usrp_source,make)
        )
        
        .def("set_gain",&compressing_usrp_source::set_gain,       
            py::arg("gain"),
            D(compressing_usrp_source,set_gain)
        )
        
        .def("set_center_freq",&compressing_usrp_source::set_center_freq,       
            py::arg("tune_request"),
            D(compressing_usrp_source,set_center_freq)
        )
        
        .def("set_antenna",&compressing_usrp_source::set_antenna,       
            py::arg("ant"),
            D(compressing_usrp_source,set_antenna)
        )
        ;

        py::module m_sparsdr = m.def_submodule("sparsdr");
}








