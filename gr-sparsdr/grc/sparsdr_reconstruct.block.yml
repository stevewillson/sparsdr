# auto-generated by grc.converter

id: variable_sparsdr_reconstruct
label: SparSDR Reconstruct
category: '[SparSDR]'
# Dummy value is required so GNU Radio Companion will generate code
value: ${0}

parameters:
-   id: reconstruct_path
    label: Executable
    dtype: string
    default: sparsdr_reconstruct
-   id: band_count
    label: Bands
    dtype: int
    default: '1'
    hide: part
-   id: compressed_format
    label: Compressed format
    dtype: string
    options: [N210 v1, N210 v2, Pluto v1, Pluto v2]
    option_labels: [N210 v1, N210 v2, Pluto v1, Pluto v2]
-   id: compression_fft_size
    label: Compression FFT size
    dtype: int
    default: '1024'
-   id: zero_gaps
    label: Zero samples in gaps
    dtype: enum
    default: 'False'
    options: ['True', 'False']
-   id: band_0_frequency
    label: Band 0 frequency
    category: Bands
    dtype: real
    default: '0.0'
    hide: ${ ('none' if int(band_count) > 0 else 'all') }
-   id: band_0_bins
    label: Band 0 bins
    category: Bands
    dtype: int
    default: '2048'
    hide: ${ ('none' if int(band_count) > 0 else 'all') }
-   id: band_1_frequency
    label: Band 1 frequency
    category: Bands
    dtype: real
    default: '0.0'
    hide: ${ ('none' if int(band_count) > 1 else 'all') }
-   id: band_1_bins
    label: Band 1 bins
    category: Bands
    dtype: int
    default: '2048'
    hide: ${ ('none' if int(band_count) > 1 else 'all') }
-   id: band_2_frequency
    label: Band 2 frequency
    category: Bands
    dtype: real
    default: '0.0'
    hide: ${ ('none' if int(band_count) > 2 else 'all') }
-   id: band_2_bins
    label: Band 2 bins
    category: Bands
    dtype: int
    default: '2048'
    hide: ${ ('none' if int(band_count) > 2 else 'all') }
-   id: band_3_frequency
    label: Band 3 frequency
    category: Bands
    dtype: real
    default: '0.0'
    hide: ${ ('none' if int(band_count) > 3 else 'all') }
-   id: band_3_bins
    label: Band 3 bins
    category: Bands
    dtype: int
    default: '2048'
    hide: ${ ('none' if int(band_count) > 3 else 'all') }
-   id: band_4_frequency
    label: Band 4 frequency
    category: Bands
    dtype: real
    default: '0.0'
    hide: ${ ('none' if int(band_count) > 4 else 'all') }
-   id: band_4_bins
    label: Band 4 bins
    category: Bands
    dtype: int
    default: '2048'
    hide: ${ ('none' if int(band_count) > 4 else 'all') }
-   id: band_5_frequency
    label: Band 5 frequency
    category: Bands
    dtype: real
    default: '0.0'
    hide: ${ ('none' if int(band_count) > 5 else 'all') }
-   id: band_5_bins
    label: Band 5 bins
    category: Bands
    dtype: int
    default: '2048'
    hide: ${ ('none' if int(band_count) > 5 else 'all') }
-   id: band_6_frequency
    label: Band 6 frequency
    category: Bands
    dtype: real
    default: '0.0'
    hide: ${ ('none' if int(band_count) > 6 else 'all') }
-   id: band_6_bins
    label: Band 6 bins
    category: Bands
    dtype: int
    default: '2048'
    hide: ${ ('none' if int(band_count) > 6 else 'all') }
-   id: band_7_frequency
    label: Band 7 frequency
    category: Bands
    dtype: real
    default: '0.0'
    hide: ${ ('none' if int(band_count) > 7 else 'all') }
-   id: band_7_bins
    label: Band 7 bins
    category: Bands
    dtype: int
    default: '2048'
    hide: ${ ('none' if int(band_count) > 7 else 'all') }
-   id: band_8_frequency
    label: Band 8 frequency
    category: Bands
    dtype: real
    default: '0.0'
    hide: ${ ('none' if int(band_count) > 8 else 'all') }
-   id: band_8_bins
    label: Band 8 bins
    category: Bands
    dtype: int
    default: '2048'
    hide: ${ ('none' if int(band_count) > 8 else 'all') }
-   id: band_9_frequency
    label: Band 9 frequency
    category: Bands
    dtype: real
    default: '0.0'
    hide: ${ ('none' if int(band_count) > 9 else 'all') }
-   id: band_9_bins
    label: Band 9 bins
    category: Bands
    dtype: int
    default: '2048'
    hide: ${ ('none' if int(band_count) > 9 else 'all') }
-   id: band_10_frequency
    label: Band 10 frequency
    category: Bands
    dtype: real
    default: '0.0'
    hide: ${ ('none' if int(band_count) > 10 else 'all') }
-   id: band_10_bins
    label: Band 10 bins
    category: Bands
    dtype: int
    default: '2048'
    hide: ${ ('none' if int(band_count) > 10 else 'all') }
-   id: band_11_frequency
    label: Band 11 frequency
    category: Bands
    dtype: real
    default: '0.0'
    hide: ${ ('none' if int(band_count) > 11 else 'all') }
-   id: band_11_bins
    label: Band 11 bins
    category: Bands
    dtype: int
    default: '2048'
    hide: ${ ('none' if int(band_count) > 11 else 'all') }
-   id: band_12_frequency
    label: Band 12 frequency
    category: Bands
    dtype: real
    default: '0.0'
    hide: ${ ('none' if int(band_count) > 12 else 'all') }
-   id: band_12_bins
    label: Band 12 bins
    category: Bands
    dtype: int
    default: '2048'
    hide: ${ ('none' if int(band_count) > 12 else 'all') }
-   id: band_13_frequency
    label: Band 13 frequency
    category: Bands
    dtype: real
    default: '0.0'
    hide: ${ ('none' if int(band_count) > 13 else 'all') }
-   id: band_13_bins
    label: Band 13 bins
    category: Bands
    dtype: int
    default: '2048'
    hide: ${ ('none' if int(band_count) > 13 else 'all') }
-   id: band_14_frequency
    label: Band 14 frequency
    category: Bands
    dtype: real
    default: '0.0'
    hide: ${ ('none' if int(band_count) > 14 else 'all') }
-   id: band_14_bins
    label: Band 14 bins
    category: Bands
    dtype: int
    default: '2048'
    hide: ${ ('none' if int(band_count) > 14 else 'all') }
-   id: band_15_frequency
    label: Band 15 frequency
    category: Bands
    dtype: real
    default: '0.0'
    hide: ${ ('none' if int(band_count) > 15 else 'all') }
-   id: band_15_bins
    label: Band 15 bins
    category: Bands
    dtype: int
    default: '2048'
    hide: ${ ('none' if int(band_count) > 15 else 'all') }
-   id: band_16_frequency
    label: Band 16 frequency
    category: Bands
    dtype: real
    default: '0.0'
    hide: ${ ('none' if int(band_count) > 16 else 'all') }
-   id: band_16_bins
    label: Band 16 bins
    category: Bands
    dtype: int
    default: '2048'
    hide: ${ ('none' if int(band_count) > 16 else 'all') }
-   id: band_17_frequency
    label: Band 17 frequency
    category: Bands
    dtype: real
    default: '0.0'
    hide: ${ ('none' if int(band_count) > 17 else 'all') }
-   id: band_17_bins
    label: Band 17 bins
    category: Bands
    dtype: int
    default: '2048'
    hide: ${ ('none' if int(band_count) > 17 else 'all') }
-   id: band_18_frequency
    label: Band 18 frequency
    category: Bands
    dtype: real
    default: '0.0'
    hide: ${ ('none' if int(band_count) > 18 else 'all') }
-   id: band_18_bins
    label: Band 18 bins
    category: Bands
    dtype: int
    default: '2048'
    hide: ${ ('none' if int(band_count) > 18 else 'all') }
-   id: band_19_frequency
    label: Band 19 frequency
    category: Bands
    dtype: real
    default: '0.0'
    hide: ${ ('none' if int(band_count) > 19 else 'all') }
-   id: band_19_bins
    label: Band 19 bins
    category: Bands
    dtype: int
    default: '2048'
    hide: ${ ('none' if int(band_count) > 19 else 'all') }
-   id: band_20_frequency
    label: Band 20 frequency
    category: Bands
    dtype: real
    default: '0.0'
    hide: ${ ('none' if int(band_count) > 20 else 'all') }
-   id: band_20_bins
    label: Band 20 bins
    category: Bands
    dtype: int
    default: '2048'
    hide: ${ ('none' if int(band_count) > 20 else 'all') }
-   id: band_21_frequency
    label: Band 21 frequency
    category: Bands
    dtype: real
    default: '0.0'
    hide: ${ ('none' if int(band_count) > 21 else 'all') }
-   id: band_21_bins
    label: Band 21 bins
    category: Bands
    dtype: int
    default: '2048'
    hide: ${ ('none' if int(band_count) > 21 else 'all') }
-   id: band_22_frequency
    label: Band 22 frequency
    category: Bands
    dtype: real
    default: '0.0'
    hide: ${ ('none' if int(band_count) > 22 else 'all') }
-   id: band_22_bins
    label: Band 22 bins
    category: Bands
    dtype: int
    default: '2048'
    hide: ${ ('none' if int(band_count) > 22 else 'all') }
-   id: band_23_frequency
    label: Band 23 frequency
    category: Bands
    dtype: real
    default: '0.0'
    hide: ${ ('none' if int(band_count) > 23 else 'all') }
-   id: band_23_bins
    label: Band 23 bins
    category: Bands
    dtype: int
    default: '2048'
    hide: ${ ('none' if int(band_count) > 23 else 'all') }
-   id: band_24_frequency
    label: Band 24 frequency
    category: Bands
    dtype: real
    default: '0.0'
    hide: ${ ('none' if int(band_count) > 24 else 'all') }
-   id: band_24_bins
    label: Band 24 bins
    category: Bands
    dtype: int
    default: '2048'
    hide: ${ ('none' if int(band_count) > 24 else 'all') }
-   id: band_25_frequency
    label: Band 25 frequency
    category: Bands
    dtype: real
    default: '0.0'
    hide: ${ ('none' if int(band_count) > 25 else 'all') }
-   id: band_25_bins
    label: Band 25 bins
    category: Bands
    dtype: int
    default: '2048'
    hide: ${ ('none' if int(band_count) > 25 else 'all') }
-   id: band_26_frequency
    label: Band 26 frequency
    category: Bands
    dtype: real
    default: '0.0'
    hide: ${ ('none' if int(band_count) > 26 else 'all') }
-   id: band_26_bins
    label: Band 26 bins
    category: Bands
    dtype: int
    default: '2048'
    hide: ${ ('none' if int(band_count) > 26 else 'all') }
-   id: band_27_frequency
    label: Band 27 frequency
    category: Bands
    dtype: real
    default: '0.0'
    hide: ${ ('none' if int(band_count) > 27 else 'all') }
-   id: band_27_bins
    label: Band 27 bins
    category: Bands
    dtype: int
    default: '2048'
    hide: ${ ('none' if int(band_count) > 27 else 'all') }
-   id: band_28_frequency
    label: Band 28 frequency
    category: Bands
    dtype: real
    default: '0.0'
    hide: ${ ('none' if int(band_count) > 28 else 'all') }
-   id: band_28_bins
    label: Band 28 bins
    category: Bands
    dtype: int
    default: '2048'
    hide: ${ ('none' if int(band_count) > 28 else 'all') }
-   id: band_29_frequency
    label: Band 29 frequency
    category: Bands
    dtype: real
    default: '0.0'
    hide: ${ ('none' if int(band_count) > 29 else 'all') }
-   id: band_29_bins
    label: Band 29 bins
    category: Bands
    dtype: int
    default: '2048'
    hide: ${ ('none' if int(band_count) > 29 else 'all') }
-   id: band_30_frequency
    label: Band 30 frequency
    category: Bands
    dtype: real
    default: '0.0'
    hide: ${ ('none' if int(band_count) > 30 else 'all') }
-   id: band_30_bins
    label: Band 30 bins
    category: Bands
    dtype: int
    default: '2048'
    hide: ${ ('none' if int(band_count) > 30 else 'all') }
-   id: band_31_frequency
    label: Band 31 frequency
    category: Bands
    dtype: real
    default: '0.0'
    hide: ${ ('none' if int(band_count) > 31 else 'all') }
-   id: band_31_bins
    label: Band 31 bins
    category: Bands
    dtype: int
    default: '2048'
    hide: ${ ('none' if int(band_count) > 31 else 'all') }

inputs:
-   domain: stream
    dtype: sc16

outputs:
-   domain: stream
    dtype: complex
    multiplicity: ${ band_count }

asserts:
- ${ 32 >= band_count }
- ${ band_count > 0 }
- ${ len(compressed_format) != 0 }

templates:
    imports: |-
        from gnuradio import sparsdr
        import shutil
    var_make: |-
        ${id}_bands = sparsdr.band_spec_vector()
        % if int(eval(band_count)) > 0:
        ${id}_bands.push_back(sparsdr.band_spec(${band_0_frequency}, ${band_0_bins}))
        % endif
        % if int(eval(band_count)) > 1:
        ${id}_bands.push_back(sparsdr.band_spec(${band_1_frequency}, ${band_1_bins}))
        % endif
        % if int(eval(band_count)) > 2:
        ${id}_bands.push_back(sparsdr.band_spec(${band_2_frequency}, ${band_2_bins}))
        % endif
        % if int(eval(band_count)) > 3:
        ${id}_bands.push_back(sparsdr.band_spec(${band_3_frequency}, ${band_3_bins}))
        % endif
        % if int(eval(band_count)) > 4:
        ${id}_bands.push_back(sparsdr.band_spec(${band_4_frequency}, ${band_4_bins}))
        % endif
        % if int(eval(band_count)) > 5:
        ${id}_bands.push_back(sparsdr.band_spec(${band_5_frequency}, ${band_5_bins}))
        % endif
        % if int(eval(band_count)) > 6:
        ${id}_bands.push_back(sparsdr.band_spec(${band_6_frequency}, ${band_6_bins}))
        % endif
        % if int(eval(band_count)) > 7:
        ${id}_bands.push_back(sparsdr.band_spec(${band_7_frequency}, ${band_7_bins}))
        % endif
        % if int(eval(band_count)) > 8:
        ${id}_bands.push_back(sparsdr.band_spec(${band_8_frequency}, ${band_8_bins}))
        % endif
        % if int(eval(band_count)) > 9:
        ${id}_bands.push_back(sparsdr.band_spec(${band_9_frequency}, ${band_9_bins}))
        % endif
        % if int(eval(band_count)) > 10:
        ${id}_bands.push_back(sparsdr.band_spec(${band_10_frequency}, ${band_10_bins}))
        % endif
        % if int(eval(band_count)) > 11:
        ${id}_bands.push_back(sparsdr.band_spec(${band_11_frequency}, ${band_11_bins}))
        % endif
        % if int(eval(band_count)) > 12:
        ${id}_bands.push_back(sparsdr.band_spec(${band_12_frequency}, ${band_12_bins}))
        % endif
        % if int(eval(band_count)) > 13:
        ${id}_bands.push_back(sparsdr.band_spec(${band_13_frequency}, ${band_13_bins}))
        % endif
        % if int(eval(band_count)) > 14:
        ${id}_bands.push_back(sparsdr.band_spec(${band_14_frequency}, ${band_14_bins}))
        % endif
        % if int(eval(band_count)) > 15:
        ${id}_bands.push_back(sparsdr.band_spec(${band_15_frequency}, ${band_15_bins}))
        % endif
        % if int(eval(band_count)) > 16:
        ${id}_bands.push_back(sparsdr.band_spec(${band_16_frequency}, ${band_16_bins}))
        % endif
        % if int(eval(band_count)) > 17:
        ${id}_bands.push_back(sparsdr.band_spec(${band_17_frequency}, ${band_17_bins}))
        % endif
        % if int(eval(band_count)) > 18:
        ${id}_bands.push_back(sparsdr.band_spec(${band_18_frequency}, ${band_18_bins}))
        % endif
        % if int(eval(band_count)) > 19:
        ${id}_bands.push_back(sparsdr.band_spec(${band_19_frequency}, ${band_19_bins}))
        % endif
        % if int(eval(band_count)) > 20:
        ${id}_bands.push_back(sparsdr.band_spec(${band_20_frequency}, ${band_20_bins}))
        % endif
        % if int(eval(band_count)) > 21:
        ${id}_bands.push_back(sparsdr.band_spec(${band_21_frequency}, ${band_21_bins}))
        % endif
        % if int(eval(band_count)) > 22:
        ${id}_bands.push_back(sparsdr.band_spec(${band_22_frequency}, ${band_22_bins}))
        % endif
        % if int(eval(band_count)) > 23:
        ${id}_bands.push_back(sparsdr.band_spec(${band_23_frequency}, ${band_23_bins}))
        % endif
        % if int(eval(band_count)) > 24:
        ${id}_bands.push_back(sparsdr.band_spec(${band_24_frequency}, ${band_24_bins}))
        % endif
        % if int(eval(band_count)) > 25:
        ${id}_bands.push_back(sparsdr.band_spec(${band_25_frequency}, ${band_25_bins}))
        % endif
        % if int(eval(band_count)) > 26:
        ${id}_bands.push_back(sparsdr.band_spec(${band_26_frequency}, ${band_26_bins}))
        % endif
        % if int(eval(band_count)) > 27:
        ${id}_bands.push_back(sparsdr.band_spec(${band_27_frequency}, ${band_27_bins}))
        % endif
        % if int(eval(band_count)) > 28:
        ${id}_bands.push_back(sparsdr.band_spec(${band_28_frequency}, ${band_28_bins}))
        % endif
        % if int(eval(band_count)) > 29:
        ${id}_bands.push_back(sparsdr.band_spec(${band_29_frequency}, ${band_29_bins}))
        % endif
        % if int(eval(band_count)) > 30:
        ${id}_bands.push_back(sparsdr.band_spec(${band_30_frequency}, ${band_30_bins}))
        % endif
        % if int(eval(band_count)) > 31:
        ${id}_bands.push_back(sparsdr.band_spec(${band_31_frequency}, ${band_31_bins}))
        % endif
        self.${id} = ${id} = sparsdr.reconstruct(bands=${id}_bands.get_values(), reconstruct_path=shutil.which(${reconstruct_path}), sample_format=${compressed_format}, zero_gaps=${zero_gaps}, compression_fft_size=${compression_fft_size})

documentation: |-
    The SparSDR reconstruct block receives compressed samples and reconstructs signals from one or more bands.

    Parameters:

    bands: The number of bands to reconstruct

    Band parameters for band i:

    Band i frequency: The center frequency to reconstruct, in herz relative to the center frequency used to capture the signals

    Band i bins: The number of bins to use when reconstructing. This determines the bandwidth to reconstruct and the sample rate of the resulting signal.

    Executable: The path to the sparsdr_reconstruct executable. If this is not an absolute path, the block will search for an executable with the correct name in the paths defined by the PATH environment variable.

file_format: 1
